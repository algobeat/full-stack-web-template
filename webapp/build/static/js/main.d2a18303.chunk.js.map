{"version":3,"sources":["components/layout/__generated__/AppLayoutQuery.graphql.ts","components/tables/userstable/__generated__/UserCard_user.graphql.ts","components/tables/userstable/__generated__/UsersTable_users.graphql.ts","components/tables/userstable/__generated__/UsersTableQuery.graphql.ts","pages/__generated__/UsersPageQuery.graphql.ts","api/mutations/__generated__/loginMutation.graphql.ts","api/mutations/__generated__/registerMutation.graphql.ts","components/navigation/Sidebar.tsx","components/navigation/TopNavBar.tsx","relayEnvironment.ts","components/layout/AppLayout.tsx","components/tables/userstable/UserCard.tsx","components/tables/userstable/UsersTable.tsx","pages/UsersPage.tsx","components/navigation/appRoutes.ts","pages/Filler.tsx","components/layout/AuthLayout.tsx","components/molecules/Copyright.tsx","api/mutations/login.ts","pages/Login.tsx","api/mutations/register.ts","pages/Register.tsx","components/navigation/authRoutes.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["node","v0","v1","v2","hash","v3","v4","v5","v6","CustomDrawer","styled","Drawer","SidebarContainer","nav","theme","breakpoints","up","DrawerContainer","div","Sidebar","props","SidebarContents","Toolbar","List","map","text","index","ListItem","button","ListItemIcon","ListItemText","primary","Divider","container","undefined","window","document","body","Hidden","smUp","variant","open","mobileOpen","onClose","handleDrawerToggle","ModalProps","keepMounted","xsDown","DominantAppBar","AppBar","ResponsiveMenuButton","IconButton","spacing","TopNavBar","position","color","aria-label","edge","onClick","drawerToggle","Typography","noWrap","environment","Environment","network","Network","create","operation","variables","fetch","method","headers","JSON","stringify","query","credentials","then","response","json","store","Store","RecordSource","Root","Content","AppLayoutComponent","useState","setMobileOpen","me","children","to","AppLayout","render","relayProps","createFragmentContainer","Card","user","name","createPaginationContainer","users","edges","CardContent","u","email","Button","disabled","relay","hasMore","isLoading","loadMore","direction","getConnectionFromProps","getFragmentVariables","prevVars","totalCount","console","log","count","getVariables","fragmentVariables","cursor","UsersPageComponent","error","message","UsersTable","appRoutes","path","component","inSidebar","exact","AuthLayout","Copyright","align","Link","href","Date","getFullYear","mutation","loginMutation","password","a","Promise","res","rej","commitMutation","onCompleted","err","onError","useStyles","makeStyles","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","registerUserMutation","authRoutes","classes","useForm","register","handleSubmit","enqueueSnackbar","useSnackbar","history","useHistory","onSubmit","data","login","success","push","Grid","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","inputRef","FormControlLabel","control","Checkbox","value","RouterLink","Box","mt","result","Container","maxWidth","validate","v","length","justify","customTheme","createMuiTheme","App","maxSnack","r","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d2a18303.chunk.js","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type UserRole = \"ADMIN\" | \"USER\" | \"%future added value\";\nexport type AppLayoutQueryVariables = {};\nexport type AppLayoutQueryResponse = {\n    readonly me: {\n        readonly role: UserRole | null;\n        readonly email: string;\n        readonly name: string | null;\n    } | null;\n};\nexport type AppLayoutQuery = {\n    readonly response: AppLayoutQueryResponse;\n    readonly variables: AppLayoutQueryVariables;\n};\n\n\n\n/*\nquery AppLayoutQuery {\n  me {\n    role\n    email\n    name\n    id\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"role\",\n  \"storageKey\": null\n},\nv1 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"email\",\n  \"storageKey\": null\n},\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"AppLayoutQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"me\",\n        \"plural\": false,\n        \"selections\": [\n          (v0/*: any*/),\n          (v1/*: any*/),\n          (v2/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"AppLayoutQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"concreteType\": \"User\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"me\",\n        \"plural\": false,\n        \"selections\": [\n          (v0/*: any*/),\n          (v1/*: any*/),\n          (v2/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"kind\": \"ScalarField\",\n            \"name\": \"id\",\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"3d2d4c51c4185a06c75a649a9f9ed7ac\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"AppLayoutQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query AppLayoutQuery {\\n  me {\\n    role\\n    email\\n    name\\n    id\\n  }\\n}\\n\"\n  }\n};\n})();\n(node as any).hash = 'eaaa83b7a44f20b3318f4ca517504d11';\nexport default node;\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from \"relay-runtime\";\nimport { FragmentRefs } from \"relay-runtime\";\nexport type UserCard_user = {\n    readonly name: string | null;\n    readonly email: string;\n    readonly \" $refType\": \"UserCard_user\";\n};\nexport type UserCard_user$data = UserCard_user;\nexport type UserCard_user$key = {\n    readonly \" $data\"?: UserCard_user$data;\n    readonly \" $fragmentRefs\": FragmentRefs<\"UserCard_user\">;\n};\n\n\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"UserCard_user\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"name\",\n      \"storageKey\": null\n    },\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"email\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"User\",\n  \"abstractKey\": null\n};\n(node as any).hash = '45f9ab63b76ffec1340d467139ab83f2';\nexport default node;\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ReaderFragment } from \"relay-runtime\";\nimport { FragmentRefs } from \"relay-runtime\";\nexport type UsersTable_users = {\n    readonly users: {\n        readonly edges: ReadonlyArray<{\n            readonly node: {\n                readonly name: string | null;\n                readonly email: string;\n                readonly \" $fragmentRefs\": FragmentRefs<\"UserCard_user\">;\n            } | null;\n        } | null>;\n        readonly pageInfo: {\n            readonly hasNextPage: boolean;\n        };\n    } | null;\n    readonly \" $refType\": \"UsersTable_users\";\n};\nexport type UsersTable_users$data = UsersTable_users;\nexport type UsersTable_users$key = {\n    readonly \" $data\"?: UsersTable_users$data;\n    readonly \" $fragmentRefs\": FragmentRefs<\"UsersTable_users\">;\n};\n\n\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [\n    {\n      \"defaultValue\": 2,\n      \"kind\": \"LocalArgument\",\n      \"name\": \"count\"\n    },\n    {\n      \"defaultValue\": null,\n      \"kind\": \"LocalArgument\",\n      \"name\": \"cursor\"\n    }\n  ],\n  \"kind\": \"Fragment\",\n  \"metadata\": {\n    \"connection\": [\n      {\n        \"count\": \"count\",\n        \"cursor\": \"cursor\",\n        \"direction\": \"forward\",\n        \"path\": [\n          \"users\"\n        ]\n      }\n    ]\n  },\n  \"name\": \"UsersTable_users\",\n  \"selections\": [\n    {\n      \"alias\": \"users\",\n      \"args\": null,\n      \"concreteType\": \"UserConnection\",\n      \"kind\": \"LinkedField\",\n      \"name\": \"__UsersTable_users_connection\",\n      \"plural\": false,\n      \"selections\": [\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"concreteType\": \"UserEdge\",\n          \"kind\": \"LinkedField\",\n          \"name\": \"edges\",\n          \"plural\": true,\n          \"selections\": [\n            {\n              \"alias\": null,\n              \"args\": null,\n              \"concreteType\": \"User\",\n              \"kind\": \"LinkedField\",\n              \"name\": \"node\",\n              \"plural\": false,\n              \"selections\": [\n                {\n                  \"alias\": null,\n                  \"args\": null,\n                  \"kind\": \"ScalarField\",\n                  \"name\": \"name\",\n                  \"storageKey\": null\n                },\n                {\n                  \"alias\": null,\n                  \"args\": null,\n                  \"kind\": \"ScalarField\",\n                  \"name\": \"email\",\n                  \"storageKey\": null\n                },\n                {\n                  \"alias\": null,\n                  \"args\": null,\n                  \"kind\": \"ScalarField\",\n                  \"name\": \"__typename\",\n                  \"storageKey\": null\n                },\n                {\n                  \"args\": null,\n                  \"kind\": \"FragmentSpread\",\n                  \"name\": \"UserCard_user\"\n                }\n              ],\n              \"storageKey\": null\n            },\n            {\n              \"alias\": null,\n              \"args\": null,\n              \"kind\": \"ScalarField\",\n              \"name\": \"cursor\",\n              \"storageKey\": null\n            }\n          ],\n          \"storageKey\": null\n        },\n        {\n          \"alias\": null,\n          \"args\": null,\n          \"concreteType\": \"PageInfo\",\n          \"kind\": \"LinkedField\",\n          \"name\": \"pageInfo\",\n          \"plural\": false,\n          \"selections\": [\n            {\n              \"alias\": null,\n              \"args\": null,\n              \"kind\": \"ScalarField\",\n              \"name\": \"hasNextPage\",\n              \"storageKey\": null\n            },\n            {\n              \"alias\": null,\n              \"args\": null,\n              \"kind\": \"ScalarField\",\n              \"name\": \"endCursor\",\n              \"storageKey\": null\n            }\n          ],\n          \"storageKey\": null\n        }\n      ],\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Query\",\n  \"abstractKey\": null\n};\n(node as any).hash = '77b7c4b41c96506c8041be47d0730126';\nexport default node;\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from \"relay-runtime\";\nimport { FragmentRefs } from \"relay-runtime\";\nexport type UsersTableQueryVariables = {\n    count: number;\n    cursor?: string | null;\n};\nexport type UsersTableQueryResponse = {\n    readonly \" $fragmentRefs\": FragmentRefs<\"UsersTable_users\">;\n};\nexport type UsersTableQuery = {\n    readonly response: UsersTableQueryResponse;\n    readonly variables: UsersTableQueryVariables;\n};\n\n\n\n/*\nquery UsersTableQuery(\n  $count: Int!\n  $cursor: ID\n) {\n  ...UsersTable_users_1G22uz\n}\n\nfragment UserCard_user on User {\n  name\n  email\n}\n\nfragment UsersTable_users_1G22uz on Query {\n  users(first: $count, after: $cursor) {\n    edges {\n      node {\n        name\n        email\n        ...UserCard_user\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"count\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"cursor\"\n  }\n],\nv1 = [\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"after\",\n    \"variableName\": \"cursor\"\n  },\n  {\n    \"kind\": \"Variable\",\n    \"name\": \"first\",\n    \"variableName\": \"count\"\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UsersTableQuery\",\n    \"selections\": [\n      {\n        \"args\": [\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"count\",\n            \"variableName\": \"count\"\n          },\n          {\n            \"kind\": \"Variable\",\n            \"name\": \"cursor\",\n            \"variableName\": \"cursor\"\n          }\n        ],\n        \"kind\": \"FragmentSpread\",\n        \"name\": \"UsersTable_users\"\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"UsersTableQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"UserConnection\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"users\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"UserEdge\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"edges\",\n            \"plural\": true,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"User\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"node\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"name\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"email\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"id\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"__typename\",\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"cursor\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"PageInfo\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"pageInfo\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"hasNextPage\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"endCursor\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      },\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"filters\": null,\n        \"handle\": \"connection\",\n        \"key\": \"UsersTable_users\",\n        \"kind\": \"LinkedHandle\",\n        \"name\": \"users\"\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"dec55eb8674a1ab4b607bbe01def5b9d\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UsersTableQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UsersTableQuery(\\n  $count: Int!\\n  $cursor: ID\\n) {\\n  ...UsersTable_users_1G22uz\\n}\\n\\nfragment UserCard_user on User {\\n  name\\n  email\\n}\\n\\nfragment UsersTable_users_1G22uz on Query {\\n  users(first: $count, after: $cursor) {\\n    edges {\\n      node {\\n        name\\n        email\\n        ...UserCard_user\\n        id\\n        __typename\\n      }\\n      cursor\\n    }\\n    pageInfo {\\n      hasNextPage\\n      endCursor\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n(node as any).hash = 'adb837a68f7d16347d06bf0c8a652261';\nexport default node;\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from \"relay-runtime\";\nimport { FragmentRefs } from \"relay-runtime\";\nexport type UsersPageQueryVariables = {};\nexport type UsersPageQueryResponse = {\n    readonly \" $fragmentRefs\": FragmentRefs<\"UsersTable_users\">;\n};\nexport type UsersPageQuery = {\n    readonly response: UsersPageQueryResponse;\n    readonly variables: UsersPageQueryVariables;\n};\n\n\n\n/*\nquery UsersPageQuery {\n  ...UsersTable_users\n}\n\nfragment UserCard_user on User {\n  name\n  email\n}\n\nfragment UsersTable_users on Query {\n  users(first: 2) {\n    edges {\n      node {\n        name\n        email\n        ...UserCard_user\n        id\n        __typename\n      }\n      cursor\n    }\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"kind\": \"Literal\",\n    \"name\": \"first\",\n    \"value\": 2\n  }\n];\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"UsersPageQuery\",\n    \"selections\": [\n      {\n        \"args\": null,\n        \"kind\": \"FragmentSpread\",\n        \"name\": \"UsersTable_users\"\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"UsersPageQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v0/*: any*/),\n        \"concreteType\": \"UserConnection\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"users\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"UserEdge\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"edges\",\n            \"plural\": true,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"concreteType\": \"User\",\n                \"kind\": \"LinkedField\",\n                \"name\": \"node\",\n                \"plural\": false,\n                \"selections\": [\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"name\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"email\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"id\",\n                    \"storageKey\": null\n                  },\n                  {\n                    \"alias\": null,\n                    \"args\": null,\n                    \"kind\": \"ScalarField\",\n                    \"name\": \"__typename\",\n                    \"storageKey\": null\n                  }\n                ],\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"cursor\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"PageInfo\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"pageInfo\",\n            \"plural\": false,\n            \"selections\": [\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"hasNextPage\",\n                \"storageKey\": null\n              },\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"endCursor\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": \"users(first:2)\"\n      },\n      {\n        \"alias\": null,\n        \"args\": (v0/*: any*/),\n        \"filters\": null,\n        \"handle\": \"connection\",\n        \"key\": \"UsersTable_users\",\n        \"kind\": \"LinkedHandle\",\n        \"name\": \"users\"\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"86af3576162487f2e3a0a9260d4490cd\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"UsersPageQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query UsersPageQuery {\\n  ...UsersTable_users\\n}\\n\\nfragment UserCard_user on User {\\n  name\\n  email\\n}\\n\\nfragment UsersTable_users on Query {\\n  users(first: 2) {\\n    edges {\\n      node {\\n        name\\n        email\\n        ...UserCard_user\\n        id\\n        __typename\\n      }\\n      cursor\\n    }\\n    pageInfo {\\n      hasNextPage\\n      endCursor\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n(node as any).hash = 'ee12c05241dc3ff9d8a79492732d6863';\nexport default node;\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type loginMutationVariables = {\n    email: string;\n    password: string;\n};\nexport type loginMutationResponse = {\n    readonly login: {\n        readonly success: boolean;\n        readonly message: string | null;\n        readonly user: {\n            readonly name: string | null;\n            readonly email: string;\n        } | null;\n    } | null;\n};\nexport type loginMutation = {\n    readonly response: loginMutationResponse;\n    readonly variables: loginMutationVariables;\n};\n\n\n\n/*\nmutation loginMutation(\n  $email: String!\n  $password: String!\n) {\n  login(input: {email: $email, password: $password}) {\n    success\n    message\n    user {\n      name\n      email\n      id\n    }\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"email\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"password\"\n  }\n],\nv1 = [\n  {\n    \"fields\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"email\",\n        \"variableName\": \"email\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"password\",\n        \"variableName\": \"password\"\n      }\n    ],\n    \"kind\": \"ObjectValue\",\n    \"name\": \"input\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"success\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"message\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"email\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"loginMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"LoginPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"login\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user\",\n            \"plural\": false,\n            \"selections\": [\n              (v4/*: any*/),\n              (v5/*: any*/)\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutation\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"loginMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"LoginPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"login\",\n        \"plural\": false,\n        \"selections\": [\n          (v2/*: any*/),\n          (v3/*: any*/),\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user\",\n            \"plural\": false,\n            \"selections\": [\n              (v4/*: any*/),\n              (v5/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          }\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"83a261b94f012a05aec38845c60a54bc\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"loginMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation loginMutation(\\n  $email: String!\\n  $password: String!\\n) {\\n  login(input: {email: $email, password: $password}) {\\n    success\\n    message\\n    user {\\n      name\\n      email\\n      id\\n    }\\n  }\\n}\\n\"\n  }\n};\n})();\n(node as any).hash = '206c3fc2a8b586d0cdf14bcf5285727d';\nexport default node;\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest } from \"relay-runtime\";\nexport type UserRole = \"ADMIN\" | \"USER\" | \"%future added value\";\nexport type registerMutationVariables = {\n    email: string;\n    name: string;\n    password: string;\n};\nexport type registerMutationResponse = {\n    readonly signupUser: {\n        readonly user: {\n            readonly name: string | null;\n            readonly email: string;\n            readonly role: UserRole | null;\n        } | null;\n        readonly success: boolean;\n        readonly message: string | null;\n    } | null;\n};\nexport type registerMutation = {\n    readonly response: registerMutationResponse;\n    readonly variables: registerMutationVariables;\n};\n\n\n\n/*\nmutation registerMutation(\n  $email: String!\n  $name: String!\n  $password: String!\n) {\n  signupUser(input: {email: $email, name: $name, password: $password}) {\n    user {\n      name\n      email\n      role\n      id\n    }\n    success\n    message\n  }\n}\n*/\n\nconst node: ConcreteRequest = (function(){\nvar v0 = [\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"email\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"name\"\n  },\n  {\n    \"defaultValue\": null,\n    \"kind\": \"LocalArgument\",\n    \"name\": \"password\"\n  }\n],\nv1 = [\n  {\n    \"fields\": [\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"email\",\n        \"variableName\": \"email\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"name\",\n        \"variableName\": \"name\"\n      },\n      {\n        \"kind\": \"Variable\",\n        \"name\": \"password\",\n        \"variableName\": \"password\"\n      }\n    ],\n    \"kind\": \"ObjectValue\",\n    \"name\": \"input\"\n  }\n],\nv2 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"name\",\n  \"storageKey\": null\n},\nv3 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"email\",\n  \"storageKey\": null\n},\nv4 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"role\",\n  \"storageKey\": null\n},\nv5 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"success\",\n  \"storageKey\": null\n},\nv6 = {\n  \"alias\": null,\n  \"args\": null,\n  \"kind\": \"ScalarField\",\n  \"name\": \"message\",\n  \"storageKey\": null\n};\nreturn {\n  \"fragment\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"registerMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"SignUpPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"signupUser\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v4/*: any*/)\n            ],\n            \"storageKey\": null\n          },\n          (v5/*: any*/),\n          (v6/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ],\n    \"type\": \"Mutation\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": (v0/*: any*/),\n    \"kind\": \"Operation\",\n    \"name\": \"registerMutation\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": (v1/*: any*/),\n        \"concreteType\": \"SignUpPayload\",\n        \"kind\": \"LinkedField\",\n        \"name\": \"signupUser\",\n        \"plural\": false,\n        \"selections\": [\n          {\n            \"alias\": null,\n            \"args\": null,\n            \"concreteType\": \"User\",\n            \"kind\": \"LinkedField\",\n            \"name\": \"user\",\n            \"plural\": false,\n            \"selections\": [\n              (v2/*: any*/),\n              (v3/*: any*/),\n              (v4/*: any*/),\n              {\n                \"alias\": null,\n                \"args\": null,\n                \"kind\": \"ScalarField\",\n                \"name\": \"id\",\n                \"storageKey\": null\n              }\n            ],\n            \"storageKey\": null\n          },\n          (v5/*: any*/),\n          (v6/*: any*/)\n        ],\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"1cebe63f2e32d52117391bb8ab187c10\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"registerMutation\",\n    \"operationKind\": \"mutation\",\n    \"text\": \"mutation registerMutation(\\n  $email: String!\\n  $name: String!\\n  $password: String!\\n) {\\n  signupUser(input: {email: $email, name: $name, password: $password}) {\\n    user {\\n      name\\n      email\\n      role\\n      id\\n    }\\n    success\\n    message\\n  }\\n}\\n\"\n  }\n};\n})();\n(node as any).hash = 'e48401f779cb27d284288b2555ce3961';\nexport default node;\n","import * as React from \"react\";\nimport {\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Toolbar,\n} from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\n\nconst drawerWidth = 240;\n\nconst CustomDrawer = styled(Drawer)`\n  & > .MuiDrawer-paper {\n    width: ${drawerWidth}px;\n  }\n`;\n\nconst SidebarContainer = styled.nav`\n  ${({ theme }) => theme.breakpoints.up(\"sm\")} {\n    width: ${drawerWidth}px;\n    flexshrink: 0;\n  }\n`;\n\nconst DrawerContainer = styled.div`\n  overflow: auto;\n`;\n\nexport interface SidebarProps {\n  mobileOpen: boolean;\n  handleDrawerToggle: () => any;\n}\n\nexport function Sidebar(props: SidebarProps) {\n  const SidebarContents = (\n    <React.Fragment>\n      <Toolbar />\n      <DrawerContainer>\n        <List>\n          {[\"Inbox\", \"Starred\", \"Send email\", \"Drafts\"].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </DrawerContainer>\n    </React.Fragment>\n  );\n\n  const container =\n    window !== undefined ? () => window.document.body : undefined;\n\n  return (\n    <SidebarContainer>\n      <Hidden smUp>\n        <CustomDrawer\n          container={container}\n          variant={\"temporary\"}\n          open={props.mobileOpen}\n          onClose={props.handleDrawerToggle}\n          ModalProps={{ keepMounted: true }}\n        >\n          {SidebarContents}\n        </CustomDrawer>\n      </Hidden>\n      <Hidden xsDown>\n        <CustomDrawer variant={\"permanent\"} open>\n          {SidebarContents}\n        </CustomDrawer>\n      </Hidden>\n    </SidebarContainer>\n  );\n}\n","import * as React from \"react\";\nimport { AppBar, IconButton, Toolbar, Typography } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst DominantAppBar = styled(AppBar)`\n  z-index: 1201 !important;\n`;\n\nconst ResponsiveMenuButton = styled(IconButton)`\n  &&& {\n    margin-right: ${(props) => props.theme.spacing(2)}px;\n    ${(props) => props.theme.breakpoints.up(\"sm\")} {\n      display: none;\n    }\n  }\n`;\n\nexport interface TopNavBarProps {\n  drawerToggle?: () => any;\n}\n\nexport function TopNavBar(props: TopNavBarProps) {\n  return (\n    <DominantAppBar position={\"fixed\"}>\n      <Toolbar>\n        <ResponsiveMenuButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          edge=\"start\"\n          onClick={() => props.drawerToggle && props.drawerToggle()}\n        >\n          <MenuIcon />\n        </ResponsiveMenuButton>\n        <Typography variant={\"h6\"} noWrap>\n          Algobeat - Algorithm training assistant\n        </Typography>\n      </Toolbar>\n    </DominantAppBar>\n  );\n}\n","import { Environment, Network, RecordSource, Store } from \"relay-runtime\";\n\nimport { RequestParameters } from \"relay-runtime/lib/util/RelayConcreteNode\";\nimport { Variables } from \"relay-runtime/lib/util/RelayRuntimeTypes\";\n\nfunction fetchQuery(operation: RequestParameters, variables: Variables) {\n  // Configure your setup to reverse proxy the /graphql path to the backend.\n  // We then send credentials using cookies.\n  return fetch(\"/graphql\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: operation.text,\n      variables,\n    }),\n    credentials: \"include\",\n  }).then((response) => {\n    return response.json();\n  });\n}\n\nconst environment = new Environment({\n  network: Network.create(fetchQuery),\n  store: new Store(new RecordSource()),\n});\n\nexport default environment;\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport { Sidebar } from \"../navigation/Sidebar\";\nimport { TopNavBar } from \"../navigation/TopNavBar\";\nimport styled from \"styled-components\";\nimport { Toolbar, Typography } from \"@material-ui/core\";\nimport { QueryRenderer, RelayProp } from \"react-relay\";\nimport environment from \"../../relayEnvironment\";\nimport { graphql } from \"babel-plugin-relay/macro\";\nimport {\n  AppLayoutQuery,\n  AppLayoutQueryResponse,\n} from \"./__generated__/AppLayoutQuery.graphql\";\nimport { Redirect } from \"react-router\";\n\nconst Root = styled.div`\n  display: flex;\n`;\n\nconst Content = styled.div`\n  flexgrow: 1;\n  padding: 24px;\n`;\n\ninterface AppLayoutProps {\n  relay?: RelayProp;\n  props: AppLayoutQueryResponse | null;\n  children: React.ReactNode;\n}\n\nfunction AppLayoutComponent(props: AppLayoutProps) {\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  if (!props.props) {\n    return <Typography>Loading...</Typography>;\n  }\n\n  if (!props.props.me) {\n    return <Redirect to={\"/auth/login/\"} />;\n  }\n\n  return (\n    <Root>\n      <TopNavBar drawerToggle={handleDrawerToggle} />\n      <Sidebar\n        handleDrawerToggle={handleDrawerToggle}\n        mobileOpen={mobileOpen}\n      />\n      <Content>\n        <Toolbar />\n        {props.children}\n      </Content>\n    </Root>\n  );\n}\n\nexport function AppLayout(props: { children: React.ReactNode }) {\n  return (\n    <QueryRenderer<AppLayoutQuery>\n      environment={environment}\n      query={graphql`\n        query AppLayoutQuery {\n          me {\n            role\n            email\n            name\n          }\n        }\n      `}\n      render={(relayProps) => (\n        <AppLayoutComponent {...relayProps}>\n          {props.children}\n        </AppLayoutComponent>\n      )}\n      variables={{}}\n    />\n  );\n}\n","import * as React from \"react\";\nimport { Card, Typography } from \"@material-ui/core\";\nimport { createFragmentContainer, RelayProp } from \"react-relay\";\nimport { graphql } from \"babel-plugin-relay/macro\";\nimport { UserCard_user } from \"./__generated__/UserCard_user.graphql\";\n\ninterface UsersTableProps {\n  relay: RelayProp;\n  user: UserCard_user;\n}\n\nfunction UserCard(props: UsersTableProps) {\n  return (\n    <Card>\n      <Typography variant={\"h1\"}>{props.user.name}</Typography>\n    </Card>\n  );\n}\n\nexport default createFragmentContainer(UserCard, {\n  user: graphql`\n    fragment UserCard_user on User {\n      name\n      email\n    }\n  `,\n});\n","import * as React from \"react\";\nimport { Button, Card, CardContent } from \"@material-ui/core\";\nimport { createPaginationContainer, RelayPaginationProp } from \"react-relay\";\nimport { graphql } from \"babel-plugin-relay/macro\";\nimport { UsersTable_users } from \"./__generated__/UsersTable_users.graphql\";\nimport UserCard from \"./UserCard\";\n\ninterface UsersTableProps {\n  relay: RelayPaginationProp;\n  users: UsersTable_users;\n}\n\nfunction UserTable(props: UsersTableProps) {\n  if (!props.users.users?.edges) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <Card>\n        <CardContent>\n          {props.users.users.edges.map((u) =>\n            u && u.node ? (\n              <UserCard user={u.node} key={u.node.email} />\n            ) : (\n              <p>Loading...</p>\n            )\n          )}\n          <Button\n            disabled={!props.relay.hasMore()}\n            onClick={() => !props.relay.isLoading() && props.relay.loadMore(2)}\n          >\n            Load more\n          </Button>\n        </CardContent>\n      </Card>\n    </React.Fragment>\n  );\n}\n\nexport default createPaginationContainer(\n  UserTable,\n  {\n    users: graphql`\n      fragment UsersTable_users on Query\n      @argumentDefinitions(\n        count: { type: \"Int\", defaultValue: 2 }\n        cursor: { type: \"ID\" }\n      ) {\n        users(first: $count, after: $cursor)\n          @connection(key: \"UsersTable_users\") {\n          edges {\n            node {\n              name\n              email\n              ...UserCard_user\n            }\n          }\n          pageInfo {\n            hasNextPage\n          }\n        }\n      }\n    `,\n  },\n  {\n    direction: \"forward\",\n    getConnectionFromProps(props) {\n      return props.users && props.users.users;\n    },\n    getFragmentVariables(prevVars, totalCount) {\n      console.log(\n        \"getting fragment variables variables: \" +\n          JSON.stringify(prevVars) +\n          \" \" +\n          totalCount\n      );\n      return {\n        ...prevVars,\n        count: totalCount,\n      };\n    },\n    getVariables(props, { count, cursor }, fragmentVariables) {\n      console.log(\"initial variables: \" + count + \" \" + cursor);\n      return {\n        count,\n        cursor,\n      };\n    },\n    query: graphql`\n      query UsersTableQuery($count: Int!, $cursor: ID) {\n        ...UsersTable_users @arguments(count: $count, cursor: $cursor)\n      }\n    `,\n  }\n);\n","import * as React from \"react\";\nimport UsersTable from \"../components/tables/userstable/UsersTable\";\nimport { QueryRenderer } from \"react-relay\";\nimport environment from \"../relayEnvironment\";\nimport { graphql } from \"babel-plugin-relay/macro\";\nimport { Typography } from \"@material-ui/core\";\nimport {\n  UsersPageQuery,\n  UsersPageQueryResponse,\n} from \"./__generated__/UsersPageQuery.graphql\";\n\ninterface UsersPageProps {\n  error: Error | null;\n  props: UsersPageQueryResponse | null;\n}\n\nfunction UsersPageComponent(props: UsersPageProps) {\n  if (props.error) {\n    return <Typography>{props.error.message}</Typography>;\n  }\n  if (!props.props) {\n    return <Typography>Loading...</Typography>;\n  }\n  return <UsersTable users={props.props} />;\n}\n\nexport default function UsersPage() {\n  return (\n    <QueryRenderer<UsersPageQuery>\n      environment={environment}\n      query={graphql`\n        query UsersPageQuery {\n          ...UsersTable_users\n        }\n      `}\n      render={UsersPageComponent}\n      variables={{\n        count: 2,\n        cursor: null,\n      }}\n    />\n  );\n}\n","import Filler from \"../../pages/Filler\";\nimport * as React from \"react\";\nimport UsersPage from \"../../pages/UsersPage\";\n\nexport interface Route {\n  path: string;\n  component: () => React.ReactElement;\n  name: string;\n  inSidebar?: boolean;\n  exact?: boolean;\n}\n\nconst appRoutes: Route[] = [\n  {\n    path: \"/\",\n    component: Filler,\n    name: \"Home\",\n    inSidebar: true,\n    exact: true,\n  },\n  {\n    path: \"users/\",\n    component: UsersPage,\n    name: \"Users\",\n    inSidebar: true,\n  },\n];\n\nexport default appRoutes;\n","import * as React from \"react\";\nimport { Typography } from \"@material-ui/core\";\n\nexport default function Filler() {\n  return <Typography>TODO</Typography>;\n}\n","import * as React from \"react\";\n\nexport default function AuthLayout(props: { children: React.ReactNode }) {\n  return (\n    <React.Fragment>\n      {props.children}\n    </React.Fragment>\n  );\n}\n","import Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport React from \"react\";\r\n\r\nexport default function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}","import {graphql} from \"babel-plugin-relay/macro\";\r\nimport RelayModernEnvironment from \"relay-runtime/lib/store/RelayModernEnvironment\";\r\nimport {commitMutation} from \"relay-runtime\";\r\nimport {loginMutationResponse} from \"./__generated__/loginMutation.graphql\";\r\n\r\nconst mutation = graphql`\r\n  mutation loginMutation(\r\n    $email: String!\r\n    $password: String!\r\n  ) {\r\n    login(input: {\r\n      email: $email\r\n      password: $password\r\n    }) {\r\n      success\r\n      message\r\n      user {\r\n        name\r\n        email\r\n      }\r\n    }\r\n  }  \r\n`;\r\n\r\nexport async function loginMutation(environment: RelayModernEnvironment, email: string, password: string): Promise<loginMutationResponse> {\r\n  const variables = {email, password};\r\n\r\n  return new Promise((res, rej) => {\r\n    commitMutation(\r\n      environment,\r\n      {\r\n        variables,\r\n        mutation,\r\n        onCompleted: (response, err) => {\r\n          if (err) {\r\n            rej(err);\r\n          } else {\r\n            res(response as loginMutationResponse);\r\n          }\r\n        },\r\n        onError: (err) => {\r\n          rej(err);\r\n        }\r\n      }\r\n    );\r\n  });\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Copyright from \"../components/molecules/Copyright\";\r\nimport {Link as RouterLink, useHistory} from 'react-router-dom';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {loginMutation} from \"../api/mutations/login\";\r\nimport environment from \"../relayEnvironment\";\r\nimport {useSnackbar} from \"notistack\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function Login() {\r\n  const classes = useStyles();\r\n  const { register, handleSubmit } = useForm();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const history = useHistory();\r\n\r\n  const onSubmit = async (data: any) => {\r\n    try {\r\n      const response = await loginMutation(environment, data.email, data.password);\r\n      if (response.login?.success) {\r\n        enqueueSnackbar(\"Successfully signed in as \" + response.login.user?.name, {variant: \"success\"});\r\n        history.push(\"/\");\r\n      } else {\r\n        enqueueSnackbar(\"Problem signing in: \" + response.login?.message, {variant: \"error\"});\r\n\r\n      }\r\n    } catch (e) {\r\n      enqueueSnackbar(\"Problem signing in: \" + e.message, {variant: \"error\"});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              inputRef={register({required: true})}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              inputRef={register({required: true})}\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={handleSubmit(onSubmit)}\r\n            >\r\n              Sign In\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item xs>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to=\"/auth/register\" variant=\"body2\" component={RouterLink}>\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","import {commitMutation} from \"relay-runtime\";\r\nimport {graphql} from \"babel-plugin-relay/macro\";\r\nimport RelayModernEnvironment from \"relay-runtime/lib/store/RelayModernEnvironment\";\r\nimport {registerMutationResponse} from \"./__generated__/registerMutation.graphql\";\r\n\r\nconst mutation = graphql`\r\n  mutation registerMutation(\r\n    $email: String!\r\n    $name: String!\r\n    $password: String!\r\n  ) {\r\n    signupUser(input: {\r\n      email: $email\r\n      name: $name\r\n      password: $password\r\n    }) {\r\n      user {\r\n        name\r\n        email\r\n        role\r\n      }\r\n      success\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nexport async function registerUserMutation(environment: RelayModernEnvironment, email: string, name: string, password: string): Promise<registerMutationResponse> {\r\n  const variables = {email, name, password};\r\n\r\n  return new Promise((res, rej) => {\r\n\r\n    commitMutation(\r\n      environment,\r\n      {\r\n        mutation,\r\n        variables,\r\n        onCompleted: (response, err) => {\r\n          if (err) {\r\n            rej(err);\r\n          } else {\r\n            res(response as registerMutationResponse);\r\n          }\r\n        },\r\n        onError: (err) => {\r\n          rej(err);\r\n        }\r\n      }\r\n    )\r\n  });\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Copyright from \"../components/molecules/Copyright\";\r\nimport {Link as RouterLink, useHistory} from 'react-router-dom';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {registerUserMutation} from \"../api/mutations/register\";\r\nimport {RelayProp} from \"react-relay\";\r\nimport environment from \"../relayEnvironment\";\r\nimport {useSnackbar} from \"notistack\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\nexport default function Register() {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const { register, handleSubmit } = useForm();\r\n  const  history = useHistory();\r\n\r\n  const onSubmit = async (data: any) => {\r\n    try {\r\n      const result = await registerUserMutation(environment, data.email, data.name, data.password);\r\n      console.log(result);\r\n      enqueueSnackbar(\"Successfully signed up! You may log in now.\", {variant: \"success\"});\r\n      history.push(\"/auth/login/\");\r\n    } catch (e) {\r\n      enqueueSnackbar(\"Error registering user: \" + e.message, {variant: \"error\"});\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                autoComplete=\"name\"\r\n                name=\"name\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                autoFocus\r\n                inputRef={register({required: true})}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                inputRef={register({required: true})}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                inputRef={register({required: true, validate: (v: string) => v.length >= 8 ? true : 'Password must be at least 8 characters'})}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"confirmPassword\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"confirmPassword\"\r\n                inputRef={register({required: true})}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleSubmit(onSubmit)}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link to=\"/auth/login/\" variant=\"body2\" component={RouterLink}>\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import {Route} from \"./appRoutes\";\nimport Login from \"../../pages/Login\";\nimport Register from \"../../pages/Register\";\n\nconst authRoutes: Route[] = [\n  {\n    path: \"login/\",\n    component: Login,\n    name: \"Login\",\n  },\n  {\n    path: \"register/\",\n    component: Register,\n    name: \"Register\",\n  },\n];\n\nexport default authRoutes;\n","import React from \"react\";\nimport \"./App.css\";\nimport { AppLayout } from \"./components/layout/AppLayout\";\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core\";\nimport { ThemeProvider } from \"styled-components\";\nimport appRoutes from \"./components/navigation/appRoutes\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AuthLayout from \"./components/layout/AuthLayout\";\nimport authRoutes from \"./components/navigation/authRoutes\";\nimport {SnackbarProvider} from \"notistack\";\n\nconst customTheme = createMuiTheme({});\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={customTheme}>\n      <ThemeProvider theme={customTheme}>\n        <SnackbarProvider maxSnack={3}>\n          <Router>\n            <Switch>\n              <Route path={\"/auth/:path?\"} exact>\n                <AuthLayout>\n                  {authRoutes.map((r) => {\n                    return (\n                      <Route path={\"/auth/\" + r.path} component={r.component} />\n                    );\n                  })}\n                </AuthLayout>\n              </Route>\n\n              <Route>\n                <AppLayout>\n                  <Switch>\n                    {appRoutes.map((r) => {\n                      return <Route path={r.path} component={r.component} />;\n                    })}\n                  </Switch>\n                </AppLayout>\n              </Route>\n            </Switch>\n          </Router>\n        </SnackbarProvider>\n      </ThemeProvider>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}